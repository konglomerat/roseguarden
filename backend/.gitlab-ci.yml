flake8:
  stage: analysis
  allow_failure: true
  before_script:
    - pip install flake8
  script:
    - flake8 backend/. --exit-zero --config backend/setup.cfg --statistics --count --tee --output-file=flake8_report.txt
    - python3 scripts/flake8_quality.py flake8_report.txt
    - cat flake8_report.txt
  only:
    refs:
      - merge_requests
      - master
    changes:
      - backend/**/*
  except:
    changes:
      - "README.md"
  artifacts:
    reports:
      codequality: flake8_quality.json

pylint:
  stage: analysis
  allow_failure: true
  before_script:
    - pip install pylint
  script:
    - pylint backend/*.py
  only:
    refs:
      - master
      - merge_requests
    changes:
      - backend/**/*
  except:
    changes:
      - "README.md"

pytest:
  stage: test
  image: python:3.8
  before_script:
    - pip install -r backend/requirements.txt  
    - pip install pytest  
  script:
    - pytest --junitxml=report.xml
  artifacts:
    when: always
    reports:
      junit: report.xml
