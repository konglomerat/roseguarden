"""
This module is responsible to create a database session execute database related operations
"""

from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker

from app.core.config import settings

# probably here we have to change the SQLALCHEMY_DATABASE_URI for each tenant
# for each request:
# * change SQLALCHEMY_DATABASE_URI
# * create new engine with updated SQLALCHEMY_DATABASE_URI
# * create new sessionmaker with new engine
# Possible way to achieve this: middleware -> https://fastapi.tiangolo.com/tutorial/middleware/
# The middleware function receives ...

# ... The request.
# A function call_next that will receive the request as a parameter.
# This function will pass the request to the corresponding path operation.
# Then it returns the response generated by the corresponding path operation.
# You can then modify further the response before returning it.

# Example
# @app.middleware("http")
# async def add_process_time_header(request: Request, call_next):
#     start_time = time.time()
#     response = await call_next(request)
#     process_time = time.time() - start_time
#     response.headers["X-Process-Time"] = str(process_time)
#     return response


engine = create_engine(settings.SQLALCHEMY_DATABASE_URI, pool_pre_ping=True)
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
